package com.arogyasakhi.service;

import org.springframework.stereotype.Service;
import java.util.HashMap;
import java.util.Map;

@Service
public class LanguageService {
    
    private final Map<String, Map<String, String>> messages = new HashMap<>();
    
    public LanguageService() {
        initializeMessages();
    }
    
    private void initializeMessages() {
        // English messages
        Map<String, String> englishMessages = new HashMap<>();
        englishMessages.put("welcome", "ЁЯЩП Welcome to Arogya-Sakhi! Your personal health assistant.");
        englishMessages.put("language_selected", "тЬЕ Language set to English. Let's get started with your health journey!");
        englishMessages.put("profile_incomplete", "тЪая╕П Please complete your profile first for accurate health recommendations. Use 'ЁЯУЭ Update Profile' option.");
        englishMessages.put("consultation_start", "ЁЯй║ Health Consultation Started\n\nPlease describe your current symptoms in detail. Include:\nтАв What symptoms are you experiencing?\nтАв When did they start?\nтАв How severe are they (1-10)?\nтАв Any triggers you noticed?\n\nType your symptoms below:");
        englishMessages.put("profile_setup", "ЁЯУЭ Profile Setup\n\nLet's set up your health profile for personalized recommendations.\n\nFirst, please enter your full name:");
        englishMessages.put("analyzing_symptoms", "ЁЯФД Analyzing your symptoms... Please wait.");
        englishMessages.put("doctor_recommendation", "ЁЯЪи DOCTOR RECOMMENDATION\n\nBased on your symptoms, I recommend consulting a healthcare professional.\n\nЁЯУЮ Emergency Numbers:\nтАв Emergency: 108\nтАв Ambulance: 102\nтАв Medical Helpline: 104\n\nЁЯПе Find nearby doctors and hospitals using Google Maps or Practo app.");
        englishMessages.put("anything_else", "Is there anything else I can help you with?");
        englishMessages.put("enter_age", "Great! Now please enter your age:");
        englishMessages.put("select_gender", "Please select your gender:\n1. Male\n2. Female\n3. Other\n\nType 1, 2, or 3:");
        englishMessages.put("enter_weight", "Please enter your weight in kg (e.g., 65.5):");
        englishMessages.put("enter_height", "Please enter your height in cm (e.g., 170):");
        englishMessages.put("enter_blood_group", "Please enter your blood group (e.g., A+, B-, O+, AB-) or type 'skip':");
        englishMessages.put("enter_allergies", "Do you have any allergies? Please list them separated by commas, or type 'none':");
        englishMessages.put("enter_diseases", "Do you have any previous diseases or medical conditions? Please list them separated by commas, or type 'none':");
        englishMessages.put("enter_medications", "Are you currently taking any medications? Please list them separated by commas, or type 'none':");
        englishMessages.put("enter_emergency_contact", "Please provide an emergency contact number, or type 'skip':");
        
        // Hindi messages
        Map<String, String> hindiMessages = new HashMap<>();
        hindiMessages.put("welcome", "ЁЯЩП рдЖрд░реЛрдЧреНрдп-рд╕рдЦреА рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЖрдкрдХрд╛ рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХред");
        hindiMessages.put("language_selected", "тЬЕ рднрд╛рд╖рд╛ рд╣рд┐рдВрджреА рдореЗрдВ рд╕реЗрдЯ рдХреА рдЧрдИред рдЖрдЗрдП рдЕрдкрдиреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░рддреЗ рд╣реИрдВ!");
        hindiMessages.put("profile_incomplete", "тЪая╕П рд╕рдЯреАрдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд┐рдлрд╛рд░рд┐рд╢реЛрдВ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдЕрдкрдиреА рдкреНрд░реЛрдлрд╛рдЗрд▓ рдкреВрд░реА рдХрд░реЗрдВред 'ЁЯУЭ рдкреНрд░реЛрдлрд╛рдЗрд▓ рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ' рд╡рд┐рдХрд▓реНрдк рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред");
        hindiMessages.put("consultation_start", "ЁЯй║ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдкрд░рд╛рдорд░реНрд╢ рд╢реБрд░реВ\n\nрдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рд╡рд░реНрддрдорд╛рди рд▓рдХреНрд╖рдгреЛрдВ рдХрд╛ рд╡рд┐рд╕реНрддрд╛рд░ рд╕реЗ рд╡рд░реНрдгрди рдХрд░реЗрдВред рд╢рд╛рдорд┐рд▓ рдХрд░реЗрдВ:\nтАв рдЖрдк рдХреМрди рд╕реЗ рд▓рдХреНрд╖рдг рдорд╣рд╕реВрд╕ рдХрд░ рд░рд╣реЗ рд╣реИрдВ?\nтАв рдпреЗ рдХрдм рд╢реБрд░реВ рд╣реБрдП?\nтАв рдпреЗ рдХрд┐рддрдиреЗ рдЧрдВрднреАрд░ рд╣реИрдВ (1-10)?\nтАв рдХреЛрдИ рдЯреНрд░рд┐рдЧрд░ рдЬреЛ рдЖрдкрдиреЗ рджреЗрдЦреЗ?\n\nрдиреАрдЪреЗ рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рд▓рд┐рдЦреЗрдВ:");
        hindiMessages.put("profile_setup", "ЁЯУЭ рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕реЗрдЯрдЕрдк\n\nрд╡реНрдпрдХреНрддрд┐рдЧрдд рд╕рд┐рдлрд╛рд░рд┐рд╢реЛрдВ рдХреЗ рд▓рд┐рдП рдЖрдЗрдП рдЖрдкрдХреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕реЗрдЯ рдХрд░рддреЗ рд╣реИрдВред\n\nрдкрд╣рд▓реЗ, рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдкреВрд░рд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ:");
        hindiMessages.put("analyzing_symptoms", "ЁЯФД рдЖрдкрдХреЗ рд▓рдХреНрд╖рдгреЛрдВ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░ рд░рд╣реЗ рд╣реИрдВ... рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВред");
        hindiMessages.put("doctor_recommendation", "ЁЯЪи рдбреЙрдХреНрдЯрд░ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢\n\nрдЖрдкрдХреЗ рд▓рдХреНрд╖рдгреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░, рдореИрдВ рдХрд┐рд╕реА рд╕реНрд╡рд╛рд╕реНрдереНрдп рдкреЗрд╢реЗрд╡рд░ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдиреЗ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢ рдХрд░рддрд╛ рд╣реВрдВред\n\nЁЯУЮ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдирдВрдмрд░:\nтАв рдЖрдкрд╛рддрдХрд╛рд▓: 108\nтАв рдПрдореНрдмреБрд▓реЗрдВрд╕: 102\nтАв рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 104\n\nЁЯПе Google Maps рдпрд╛ Practo рдРрдк рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдирдЬрджреАрдХреА рдбреЙрдХреНрдЯрд░ рдФрд░ рдЕрд╕реНрдкрддрд╛рд▓ рдЦреЛрдЬреЗрдВред");
        hindiMessages.put("anything_else", "рдХреНрдпрд╛ рдХреЛрдИ рдФрд░ рдЪреАрдЬрд╝ рд╣реИ рдЬрд┐рд╕рдореЗрдВ рдореИрдВ рдЖрдкрдХреА рдорджрдж рдХрд░ рд╕рдХреВрдВ?");
        hindiMessages.put("enter_age", "рдмрд╣реБрдд рдмрдврд╝рд┐рдпрд╛! рдЕрдм рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдЙрдореНрд░ рджрд░реНрдЬ рдХрд░реЗрдВ:");
        hindiMessages.put("select_gender", "рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рд▓рд┐рдВрдЧ рдЪреБрдиреЗрдВ:\n1. рдкреБрд░реБрд╖\n2. рдорд╣рд┐рд▓рд╛\n3. рдЕрдиреНрдп\n\n1, 2, рдпрд╛ 3 рдЯрд╛рдЗрдк рдХрд░реЗрдВ:");
        hindiMessages.put("enter_weight", "рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рд╡рдЬрди рдХрд┐рд▓реЛ рдореЗрдВ рджрд░реНрдЬ рдХрд░реЗрдВ (рдЬреИрд╕реЗ, 65.5):");
        hindiMessages.put("enter_height", "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдКрдВрдЪрд╛рдИ рд╕реЗрдореА рдореЗрдВ рджрд░реНрдЬ рдХрд░реЗрдВ (рдЬреИрд╕реЗ, 170):");
        hindiMessages.put("enter_blood_group", "рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдмреНрд▓рдб рдЧреНрд░реБрдк рджрд░реНрдЬ рдХрд░реЗрдВ (рдЬреИрд╕реЗ, A+, B-, O+, AB-) рдпрд╛ 'skip' рдЯрд╛рдЗрдк рдХрд░реЗрдВ:");
        hindiMessages.put("enter_allergies", "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдХреЛрдИ рдПрд▓рд░реНрдЬреА рд╣реИ? рдХреГрдкрдпрд╛ рдЙрдиреНрд╣реЗрдВ рдХреЙрдорд╛ рд╕реЗ рдЕрд▓рдЧ рдХрд░рдХреЗ рд▓рд┐рд╕реНрдЯ рдХрд░реЗрдВ, рдпрд╛ 'none' рдЯрд╛рдЗрдк рдХрд░реЗрдВ:");
        hindiMessages.put("enter_diseases", "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдХреЛрдИ рдкреБрд░рд╛рдиреА рдмреАрдорд╛рд░рд┐рдпрд╛рдВ рдпрд╛ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реНрдерд┐рддрд┐рдпрд╛рдВ рд╣реИрдВ? рдХреГрдкрдпрд╛ рдЙрдиреНрд╣реЗрдВ рдХреЙрдорд╛ рд╕реЗ рдЕрд▓рдЧ рдХрд░рдХреЗ рд▓рд┐рд╕реНрдЯ рдХрд░реЗрдВ, рдпрд╛ 'none' рдЯрд╛рдЗрдк рдХрд░реЗрдВ:");
        hindiMessages.put("enter_medications", "рдХреНрдпрд╛ рдЖрдк рд╡рд░реНрддрдорд╛рди рдореЗрдВ рдХреЛрдИ рджрд╡рд╛рдПрдВ рд▓реЗ рд░рд╣реЗ рд╣реИрдВ? рдХреГрдкрдпрд╛ рдЙрдиреНрд╣реЗрдВ рдХреЙрдорд╛ рд╕реЗ рдЕрд▓рдЧ рдХрд░рдХреЗ рд▓рд┐рд╕реНрдЯ рдХрд░реЗрдВ, рдпрд╛ 'none' рдЯрд╛рдЗрдк рдХрд░реЗрдВ:");
        hindiMessages.put("enter_emergency_contact", "рдХреГрдкрдпрд╛ рдПрдХ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ рдирдВрдмрд░ рдкреНрд░рджрд╛рди рдХрд░реЗрдВ, рдпрд╛ 'skip' рдЯрд╛рдЗрдк рдХрд░реЗрдВ:");
        
        messages.put("en", englishMessages);
        messages.put("hi", hindiMessages);
    }
    
    public String getMessage(String key, String language) {
        return getMessage(key, language, "");
    }
    
    public String getMessage(String key, String language, String defaultValue) {
        Map<String, String> languageMessages = messages.get(language);
        if (languageMessages != null && languageMessages.containsKey(key)) {
            return languageMessages.get(key);
        }
        
        // Fallback to English if key not found in selected language
        Map<String, String> englishMessages = messages.get("en");
        if (englishMessages != null && englishMessages.containsKey(key)) {
            return englishMessages.get(key);
        }
        
        return defaultValue.isEmpty() ? key : defaultValue;
    }
}
